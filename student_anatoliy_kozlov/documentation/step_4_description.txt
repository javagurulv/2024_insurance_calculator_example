**Задание**
Выяснить ответы на следующие вопросы:
1. Почему команда Gradle build работает "из коробки" (по дефолту)?
2. Откуда он знает где в проекте лежит продакшн код, а где лежат тесты?
3. Зачем была создана
и применяется Maven структура проекта в современной разработке?

**Краткое описание процесса выполнения**

Исходя из проблем, с которыми я столкнулся при выполении предыдущих задач,
я могу сказать, что

1. Скорее всего Gradle build работает, так как она использует встроенные в IDE
настройки, в которых ранее я подключил jdk. При этом из терминала он не работал,
так как по сути терминал - это командная строка, используящая переменные среды.
Поэтому без добавленной в path jdk, проект не собирался.

2. Благодаря тому, что он используют Maven project layout.

3. Данная структура используется, как пишут сами разработики Maven на официальном
сайте, чтобы стандартизировать вид проектов. Если у каждого проекта будет разная
структура, разработчику из проекта в проект будет очень тяжело каждый раз подстраиваться
под новую структуру. А так структура каждого проекта схожа, что позволяет легче в нем
разобраться и начать работу над ним.

**Что применил/использовал, чему научился в процессе выполнения задания?**
Навыки пользователя Windows OS
Дедукция

**Сколько потратил времени на выполнение задачи?**
10 минут

**Как убедился в том, что задание выполнено правильно?**
Думаю, что информация с официального сайта Maven достаточно достоверна.